// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// lnL
double lnL(NumericMatrix y, NumericMatrix x, NumericVector w, NumericMatrix groups, List beta, List gamma, List theta1, List theta2, double sigma2, double rho, List b_splines_beta, List b_splines_gamma, double s2h_a, double s2h_b, double s2hg_a, double s2hg_b, double s2_beta, int n, int n_j, int n_k, int n_q);
RcppExport SEXP FREE_lnL(SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP b_splines_betaSEXP, SEXP b_splines_gammaSEXP, SEXP s2h_aSEXP, SEXP s2h_bSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP s2_betaSEXP, SEXP nSEXP, SEXP n_jSEXP, SEXP n_kSEXP, SEXP n_qSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
        Rcpp::traits::input_parameter< List >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< List >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< List >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_beta(b_splines_betaSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_gamma(b_splines_gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_a(s2h_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_b(s2h_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP );
        Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        double __result = lnL(y, x, w, groups, beta, gamma, theta1, theta2, sigma2, rho, b_splines_beta, b_splines_gamma, s2h_a, s2h_b, s2hg_a, s2hg_b, s2_beta, n, n_j, n_k, n_q);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ln_beta_dens
double ln_beta_dens(double x0, IntegerVector ids, NumericMatrix y, NumericMatrix x, NumericVector w, NumericMatrix groups, List beta, List gamma, List theta1, List theta2, double sigma2, double rho, List b_splines_beta, List b_splines_gamma, double s2h_a, double s2h_b, double s2hg_a, double s2hg_b, double s2_beta, int n, int n_j, int n_k, int n_q, NumericVector sigma2_gamma);
RcppExport SEXP FREE_ln_beta_dens(SEXP x0SEXP, SEXP idsSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP b_splines_betaSEXP, SEXP b_splines_gammaSEXP, SEXP s2h_aSEXP, SEXP s2h_bSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP s2_betaSEXP, SEXP nSEXP, SEXP n_jSEXP, SEXP n_kSEXP, SEXP n_qSEXP, SEXP sigma2_gammaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type ids(idsSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
        Rcpp::traits::input_parameter< List >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< List >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< List >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_beta(b_splines_betaSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_gamma(b_splines_gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_a(s2h_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_b(s2h_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP );
        Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sigma2_gamma(sigma2_gammaSEXP );
        double __result = ln_beta_dens(x0, ids, y, x, w, groups, beta, gamma, theta1, theta2, sigma2, rho, b_splines_beta, b_splines_gamma, s2h_a, s2h_b, s2hg_a, s2hg_b, s2_beta, n, n_j, n_k, n_q, sigma2_gamma);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// slice_sample_beta
double slice_sample_beta(double x0, IntegerVector ids, NumericMatrix y, NumericMatrix x, NumericVector w, NumericMatrix groups, List beta, List gamma, List theta1, List theta2, double sigma2, double rho, List b_splines_beta, List b_splines_gamma, double s2h_a, double s2h_b, double s2hg_a, double s2hg_b, double s2_beta, int n, int n_j, int n_k, int n_q, NumericVector sigma2_gamma);
RcppExport SEXP FREE_slice_sample_beta(SEXP x0SEXP, SEXP idsSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP b_splines_betaSEXP, SEXP b_splines_gammaSEXP, SEXP s2h_aSEXP, SEXP s2h_bSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP s2_betaSEXP, SEXP nSEXP, SEXP n_jSEXP, SEXP n_kSEXP, SEXP n_qSEXP, SEXP sigma2_gammaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type ids(idsSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
        Rcpp::traits::input_parameter< List >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< List >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< List >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_beta(b_splines_betaSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_gamma(b_splines_gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_a(s2h_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_b(s2h_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP );
        Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sigma2_gamma(sigma2_gammaSEXP );
        double __result = slice_sample_beta(x0, ids, y, x, w, groups, beta, gamma, theta1, theta2, sigma2, rho, b_splines_beta, b_splines_gamma, s2h_a, s2h_b, s2hg_a, s2hg_b, s2_beta, n, n_j, n_k, n_q, sigma2_gamma);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ln_gamma_dens
double ln_gamma_dens(double x0, IntegerVector ids, NumericMatrix y, NumericMatrix x, NumericVector w, NumericMatrix groups, List beta, List gamma, List theta1, List theta2, double sigma2, double rho, List b_splines_beta, List b_splines_gamma, double s2h_a, double s2h_b, double s2hg_a, double s2hg_b, double s2_beta, int n, int n_j, int n_k, int n_q, NumericVector sigma2_gamma);
RcppExport SEXP FREE_ln_gamma_dens(SEXP x0SEXP, SEXP idsSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP b_splines_betaSEXP, SEXP b_splines_gammaSEXP, SEXP s2h_aSEXP, SEXP s2h_bSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP s2_betaSEXP, SEXP nSEXP, SEXP n_jSEXP, SEXP n_kSEXP, SEXP n_qSEXP, SEXP sigma2_gammaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type ids(idsSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
        Rcpp::traits::input_parameter< List >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< List >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< List >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_beta(b_splines_betaSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_gamma(b_splines_gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_a(s2h_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_b(s2h_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP );
        Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sigma2_gamma(sigma2_gammaSEXP );
        double __result = ln_gamma_dens(x0, ids, y, x, w, groups, beta, gamma, theta1, theta2, sigma2, rho, b_splines_beta, b_splines_gamma, s2h_a, s2h_b, s2hg_a, s2hg_b, s2_beta, n, n_j, n_k, n_q, sigma2_gamma);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// slice_sample_gamma
double slice_sample_gamma(double x0, IntegerVector ids, NumericMatrix y, NumericMatrix x, NumericVector w, NumericMatrix groups, List beta, List gamma, List theta1, List theta2, double sigma2, double rho, List b_splines_beta, List b_splines_gamma, double s2h_a, double s2h_b, double s2hg_a, double s2hg_b, double s2_beta, int n, int n_j, int n_k, int n_q, NumericVector sigma2_gamma);
RcppExport SEXP FREE_slice_sample_gamma(SEXP x0SEXP, SEXP idsSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP b_splines_betaSEXP, SEXP b_splines_gammaSEXP, SEXP s2h_aSEXP, SEXP s2h_bSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP s2_betaSEXP, SEXP nSEXP, SEXP n_jSEXP, SEXP n_kSEXP, SEXP n_qSEXP, SEXP sigma2_gammaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type ids(idsSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
        Rcpp::traits::input_parameter< List >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< List >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< List >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_beta(b_splines_betaSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_gamma(b_splines_gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_a(s2h_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_b(s2h_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP );
        Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sigma2_gamma(sigma2_gammaSEXP );
        double __result = slice_sample_gamma(x0, ids, y, x, w, groups, beta, gamma, theta1, theta2, sigma2, rho, b_splines_beta, b_splines_gamma, s2h_a, s2h_b, s2hg_a, s2hg_b, s2_beta, n, n_j, n_k, n_q, sigma2_gamma);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ln_rho_dens
double ln_rho_dens(double x0, IntegerVector ids, NumericMatrix y, NumericMatrix x, NumericVector w, NumericMatrix groups, List beta, List gamma, List theta1, List theta2, double sigma2, double rho, List b_splines_beta, List b_splines_gamma, double s2h_a, double s2h_b, double s2hg_a, double s2hg_b, double s2_beta, int n, int n_j, int n_k, int n_q, NumericVector sigma2_gamma);
RcppExport SEXP FREE_ln_rho_dens(SEXP x0SEXP, SEXP idsSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP b_splines_betaSEXP, SEXP b_splines_gammaSEXP, SEXP s2h_aSEXP, SEXP s2h_bSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP s2_betaSEXP, SEXP nSEXP, SEXP n_jSEXP, SEXP n_kSEXP, SEXP n_qSEXP, SEXP sigma2_gammaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type ids(idsSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
        Rcpp::traits::input_parameter< List >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< List >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< List >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_beta(b_splines_betaSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_gamma(b_splines_gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_a(s2h_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_b(s2h_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP );
        Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sigma2_gamma(sigma2_gammaSEXP );
        double __result = ln_rho_dens(x0, ids, y, x, w, groups, beta, gamma, theta1, theta2, sigma2, rho, b_splines_beta, b_splines_gamma, s2h_a, s2h_b, s2hg_a, s2hg_b, s2_beta, n, n_j, n_k, n_q, sigma2_gamma);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// slice_sample_rho
double slice_sample_rho(double x0, IntegerVector ids, NumericMatrix y, NumericMatrix x, NumericVector w, NumericMatrix groups, List beta, List gamma, List theta1, List theta2, double sigma2, double rho, List b_splines_beta, List b_splines_gamma, double s2h_a, double s2h_b, double s2hg_a, double s2hg_b, double s2_beta, int n, int n_j, int n_k, int n_q, NumericVector sigma2_gamma);
RcppExport SEXP FREE_slice_sample_rho(SEXP x0SEXP, SEXP idsSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP b_splines_betaSEXP, SEXP b_splines_gammaSEXP, SEXP s2h_aSEXP, SEXP s2h_bSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP s2_betaSEXP, SEXP nSEXP, SEXP n_jSEXP, SEXP n_kSEXP, SEXP n_qSEXP, SEXP sigma2_gammaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type ids(idsSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
        Rcpp::traits::input_parameter< List >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< List >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< List >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_beta(b_splines_betaSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_gamma(b_splines_gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_a(s2h_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_b(s2h_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP );
        Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sigma2_gamma(sigma2_gammaSEXP );
        double __result = slice_sample_rho(x0, ids, y, x, w, groups, beta, gamma, theta1, theta2, sigma2, rho, b_splines_beta, b_splines_gamma, s2h_a, s2h_b, s2hg_a, s2hg_b, s2_beta, n, n_j, n_k, n_q, sigma2_gamma);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// calc_bs
NumericMatrix calc_bs(NumericVector x, NumericVector knots, int degree, NumericVector boundary_knots);
RcppExport SEXP FREE_calc_bs(SEXP xSEXP, SEXP knotsSEXP, SEXP degreeSEXP, SEXP boundary_knotsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type knots(knotsSEXP );
        Rcpp::traits::input_parameter< int >::type degree(degreeSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type boundary_knots(boundary_knotsSEXP );
        NumericMatrix __result = calc_bs(x, knots, degree, boundary_knots);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ln_theta1_dens
double ln_theta1_dens(double x0, IntegerVector ids, NumericMatrix y, NumericMatrix x, NumericVector w, NumericMatrix groups, List beta, List gamma, List theta1, List theta2, double sigma2, double rho, List b_splines_beta, List b_splines_gamma, double s2h_a, double s2h_b, double s2hg_a, double s2hg_b, double s2_beta, int n, int n_j, int n_k, int n_q, NumericVector sigma2_gamma);
RcppExport SEXP FREE_ln_theta1_dens(SEXP x0SEXP, SEXP idsSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP b_splines_betaSEXP, SEXP b_splines_gammaSEXP, SEXP s2h_aSEXP, SEXP s2h_bSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP s2_betaSEXP, SEXP nSEXP, SEXP n_jSEXP, SEXP n_kSEXP, SEXP n_qSEXP, SEXP sigma2_gammaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type ids(idsSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
        Rcpp::traits::input_parameter< List >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< List >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< List >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_beta(b_splines_betaSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_gamma(b_splines_gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_a(s2h_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_b(s2h_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP );
        Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sigma2_gamma(sigma2_gammaSEXP );
        double __result = ln_theta1_dens(x0, ids, y, x, w, groups, beta, gamma, theta1, theta2, sigma2, rho, b_splines_beta, b_splines_gamma, s2h_a, s2h_b, s2hg_a, s2hg_b, s2_beta, n, n_j, n_k, n_q, sigma2_gamma);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// slice_sample_theta1
double slice_sample_theta1(double x0, IntegerVector ids, NumericMatrix y, NumericMatrix x, NumericVector w, NumericMatrix groups, List beta, List gamma, List theta1, List theta2, double sigma2, double rho, List b_splines_beta, List b_splines_gamma, double s2h_a, double s2h_b, double s2hg_a, double s2hg_b, double s2_beta, int n, int n_j, int n_k, int n_q, NumericVector sigma2_gamma);
RcppExport SEXP FREE_slice_sample_theta1(SEXP x0SEXP, SEXP idsSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP b_splines_betaSEXP, SEXP b_splines_gammaSEXP, SEXP s2h_aSEXP, SEXP s2h_bSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP s2_betaSEXP, SEXP nSEXP, SEXP n_jSEXP, SEXP n_kSEXP, SEXP n_qSEXP, SEXP sigma2_gammaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type ids(idsSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
        Rcpp::traits::input_parameter< List >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< List >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< List >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_beta(b_splines_betaSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_gamma(b_splines_gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_a(s2h_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_b(s2h_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP );
        Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sigma2_gamma(sigma2_gammaSEXP );
        double __result = slice_sample_theta1(x0, ids, y, x, w, groups, beta, gamma, theta1, theta2, sigma2, rho, b_splines_beta, b_splines_gamma, s2h_a, s2h_b, s2hg_a, s2hg_b, s2_beta, n, n_j, n_k, n_q, sigma2_gamma);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ln_theta2_dens
double ln_theta2_dens(double x0, IntegerVector ids, NumericMatrix y, NumericMatrix x, NumericVector w, NumericMatrix groups, List beta, List gamma, List theta1, List theta2, double sigma2, double rho, List b_splines_beta, List b_splines_gamma, double s2h_a, double s2h_b, double s2hg_a, double s2hg_b, double s2_beta, int n, int n_j, int n_k, int n_q, NumericVector sigma2_gamma);
RcppExport SEXP FREE_ln_theta2_dens(SEXP x0SEXP, SEXP idsSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP b_splines_betaSEXP, SEXP b_splines_gammaSEXP, SEXP s2h_aSEXP, SEXP s2h_bSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP s2_betaSEXP, SEXP nSEXP, SEXP n_jSEXP, SEXP n_kSEXP, SEXP n_qSEXP, SEXP sigma2_gammaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type ids(idsSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
        Rcpp::traits::input_parameter< List >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< List >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< List >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_beta(b_splines_betaSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_gamma(b_splines_gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_a(s2h_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_b(s2h_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP );
        Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sigma2_gamma(sigma2_gammaSEXP );
        double __result = ln_theta2_dens(x0, ids, y, x, w, groups, beta, gamma, theta1, theta2, sigma2, rho, b_splines_beta, b_splines_gamma, s2h_a, s2h_b, s2hg_a, s2hg_b, s2_beta, n, n_j, n_k, n_q, sigma2_gamma);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// slice_sample_theta2
double slice_sample_theta2(double x0, IntegerVector ids, NumericMatrix y, NumericMatrix x, NumericVector w, NumericMatrix groups, List beta, List gamma, List theta1, List theta2, double sigma2, double rho, List b_splines_beta, List b_splines_gamma, double s2h_a, double s2h_b, double s2hg_a, double s2hg_b, double s2_beta, int n, int n_j, int n_k, int n_q, NumericVector sigma2_gamma);
RcppExport SEXP FREE_slice_sample_theta2(SEXP x0SEXP, SEXP idsSEXP, SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP b_splines_betaSEXP, SEXP b_splines_gammaSEXP, SEXP s2h_aSEXP, SEXP s2h_bSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP s2_betaSEXP, SEXP nSEXP, SEXP n_jSEXP, SEXP n_kSEXP, SEXP n_qSEXP, SEXP sigma2_gammaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type x0(x0SEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type ids(idsSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
        Rcpp::traits::input_parameter< List >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< List >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< List >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_beta(b_splines_betaSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_gamma(b_splines_gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_a(s2h_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_b(s2h_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP );
        Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sigma2_gamma(sigma2_gammaSEXP );
        double __result = slice_sample_theta2(x0, ids, y, x, w, groups, beta, gamma, theta1, theta2, sigma2, rho, b_splines_beta, b_splines_gamma, s2h_a, s2h_b, s2hg_a, s2hg_b, s2_beta, n, n_j, n_k, n_q, sigma2_gamma);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// sample_sigma2
double sample_sigma2(NumericMatrix y, NumericMatrix x, NumericVector w, NumericMatrix groups, List beta, List gamma, List theta1, List theta2, double sigma2, double rho, List b_splines_beta, List b_splines_gamma, double s2h_a, double s2h_b, double s2hg_a, double s2hg_b, double s2_beta, int n, int n_j, int n_k, int n_q);
RcppExport SEXP FREE_sample_sigma2(SEXP ySEXP, SEXP xSEXP, SEXP wSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP theta1SEXP, SEXP theta2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP b_splines_betaSEXP, SEXP b_splines_gammaSEXP, SEXP s2h_aSEXP, SEXP s2h_bSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP s2_betaSEXP, SEXP nSEXP, SEXP n_jSEXP, SEXP n_kSEXP, SEXP n_qSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
        Rcpp::traits::input_parameter< List >::type beta(betaSEXP );
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< List >::type theta1(theta1SEXP );
        Rcpp::traits::input_parameter< List >::type theta2(theta2SEXP );
        Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_beta(b_splines_betaSEXP );
        Rcpp::traits::input_parameter< List >::type b_splines_gamma(b_splines_gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_a(s2h_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2h_b(s2h_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type n_j(n_jSEXP );
        Rcpp::traits::input_parameter< int >::type n_k(n_kSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        double __result = sample_sigma2(y, x, w, groups, beta, gamma, theta1, theta2, sigma2, rho, b_splines_beta, b_splines_gamma, s2h_a, s2h_b, s2hg_a, s2hg_b, s2_beta, n, n_j, n_k, n_q);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// sample_sigma2_gamma
double sample_sigma2_gamma(List gamma, double s2hg_a, double s2hg_b, int n_q, int q_id);
RcppExport SEXP FREE_sample_sigma2_gamma(SEXP gammaSEXP, SEXP s2hg_aSEXP, SEXP s2hg_bSEXP, SEXP n_qSEXP, SEXP q_idSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_a(s2hg_aSEXP );
        Rcpp::traits::input_parameter< double >::type s2hg_b(s2hg_bSEXP );
        Rcpp::traits::input_parameter< int >::type n_q(n_qSEXP );
        Rcpp::traits::input_parameter< int >::type q_id(q_idSEXP );
        double __result = sample_sigma2_gamma(gamma, s2hg_a, s2hg_b, n_q, q_id);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// lnL_scalar
double lnL_scalar(NumericVector y, NumericMatrix x, NumericMatrix groups, NumericVector beta, List gamma, NumericVector delta, NumericMatrix z, double alpha, double sigma2, NumericMatrix bs_beta);
RcppExport SEXP FREE_lnL_scalar(SEXP ySEXP, SEXP xSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP alphaSEXP, SEXP sigma2SEXP, SEXP bs_betaSEXP) {
  BEGIN_RCPP
  SEXP __sexp_result;
  {
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP );
    Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type delta(deltaSEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP );
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP );
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type bs_beta(bs_betaSEXP );
    double __result = lnL_scalar(y, x, groups, beta, gamma, delta, z, alpha, sigma2, bs_beta);
    PROTECT(__sexp_result = Rcpp::wrap(__result));
  }
  UNPROTECT(1);
  return __sexp_result;
  END_RCPP
}
// sample_alpha_scalar
double sample_alpha_scalar(NumericVector y, NumericMatrix x, NumericMatrix groups, NumericVector beta, List gamma, NumericVector delta, NumericMatrix z, double alpha, double sigma2, NumericMatrix bs_beta, double s2_alpha);
RcppExport SEXP FREE_sample_alpha_scalar(SEXP ySEXP, SEXP xSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP alphaSEXP, SEXP sigma2SEXP, SEXP bs_betaSEXP, SEXP s2_alphaSEXP) {
  BEGIN_RCPP
  SEXP __sexp_result;
  {
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP );
    Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type delta(deltaSEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP );
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP );
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type bs_beta(bs_betaSEXP );
    Rcpp::traits::input_parameter< double >::type s2_alpha(s2_alphaSEXP );
    double __result = sample_alpha_scalar(y, x, groups, beta, gamma, delta, z, alpha, sigma2, bs_beta, s2_alpha);
    PROTECT(__sexp_result = Rcpp::wrap(__result));
  }
  UNPROTECT(1);
  return __sexp_result;
  END_RCPP
}
// sample_beta_scalar
double sample_beta_scalar(NumericVector y, NumericMatrix x, NumericMatrix groups, NumericVector beta, List gamma, NumericVector delta, NumericMatrix z, double alpha, double sigma2, NumericMatrix bs_beta, double s2_beta, int p_id);
RcppExport SEXP FREE_sample_beta_scalar(SEXP ySEXP, SEXP xSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP alphaSEXP, SEXP sigma2SEXP, SEXP bs_betaSEXP, SEXP s2_betaSEXP, SEXP p_idSEXP) {
  BEGIN_RCPP
  SEXP __sexp_result;
  {
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP );
    Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type delta(deltaSEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP );
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP );
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type bs_beta(bs_betaSEXP );
    Rcpp::traits::input_parameter< double >::type s2_beta(s2_betaSEXP );
    Rcpp::traits::input_parameter< int >::type p_id(p_idSEXP );
    double __result = sample_beta_scalar(y, x, groups, beta, gamma, delta, z, alpha, sigma2, bs_beta, s2_beta, p_id);
    PROTECT(__sexp_result = Rcpp::wrap(__result));
  }
  UNPROTECT(1);
  return __sexp_result;
  END_RCPP
}
// sample_delta_scalar
double sample_delta_scalar(NumericVector y, NumericMatrix x, NumericMatrix groups, NumericVector beta, List gamma, NumericVector delta, NumericMatrix z, double alpha, double sigma2, NumericMatrix bs_beta, double s2_delta, int k_id);
RcppExport SEXP FREE_sample_delta_scalar(SEXP ySEXP, SEXP xSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP alphaSEXP, SEXP sigma2SEXP, SEXP bs_betaSEXP, SEXP s2_deltaSEXP, SEXP k_idSEXP) {
  BEGIN_RCPP
  SEXP __sexp_result;
  {
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP );
    Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type delta(deltaSEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP );
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP );
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type bs_beta(bs_betaSEXP );
    Rcpp::traits::input_parameter< double >::type s2_delta(s2_deltaSEXP );
    Rcpp::traits::input_parameter< int >::type k_id(k_idSEXP );
    double __result = sample_delta_scalar(y, x, groups, beta, gamma, delta, z, alpha, sigma2, bs_beta, s2_delta, k_id);
    PROTECT(__sexp_result = Rcpp::wrap(__result));
  }
  UNPROTECT(1);
  return __sexp_result;
  END_RCPP
}
// sample_gamma_scalar
double sample_gamma_scalar(NumericVector y, NumericMatrix x, NumericMatrix groups, NumericVector beta, List gamma, NumericVector delta, NumericMatrix z, double alpha, double sigma2, NumericMatrix bs_beta, NumericVector sigma2_gamma, int q_id, int G_id);
RcppExport SEXP FREE_sample_gamma_scalar(SEXP ySEXP, SEXP xSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP alphaSEXP, SEXP sigma2SEXP, SEXP bs_betaSEXP, SEXP sigma2_gammaSEXP, SEXP q_idSEXP, SEXP G_idSEXP) {
  BEGIN_RCPP
  SEXP __sexp_result;
  {
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP );
    Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type delta(deltaSEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP );
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP );
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type bs_beta(bs_betaSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type sigma2_gamma(sigma2_gammaSEXP );
    Rcpp::traits::input_parameter< int >::type q_id(q_idSEXP );
    Rcpp::traits::input_parameter< int >::type G_id(G_idSEXP );
    double __result = sample_gamma_scalar(y, x, groups, beta, gamma, delta, z, alpha, sigma2, bs_beta, sigma2_gamma, q_id, G_id);
    PROTECT(__sexp_result = Rcpp::wrap(__result));
  }
  UNPROTECT(1);
  return __sexp_result;
  END_RCPP
}
// sample_sigma2_scalar
double sample_sigma2_scalar(NumericVector y, NumericMatrix x, NumericMatrix groups, NumericVector beta, List gamma, NumericVector delta, NumericMatrix z, double alpha, double sigma2, NumericMatrix bs_beta, double phi1, double psi1);
RcppExport SEXP FREE_sample_sigma2_scalar(SEXP ySEXP, SEXP xSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP alphaSEXP, SEXP sigma2SEXP, SEXP bs_betaSEXP, SEXP phi1SEXP, SEXP psi1SEXP) {
  BEGIN_RCPP
  SEXP __sexp_result;
  {
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type groups(groupsSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP );
    Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type delta(deltaSEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP );
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP );
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP );
    Rcpp::traits::input_parameter< NumericMatrix >::type bs_beta(bs_betaSEXP );
    Rcpp::traits::input_parameter< double >::type phi1(phi1SEXP );
    Rcpp::traits::input_parameter< double >::type psi1(psi1SEXP );
    double __result = sample_sigma2_scalar(y, x, groups, beta, gamma, delta, z, alpha, sigma2, bs_beta, phi1, psi1);
    PROTECT(__sexp_result = Rcpp::wrap(__result));
  }
  UNPROTECT(1);
  return __sexp_result;
  END_RCPP
}
// sample_sigma2_gamma_scalar
double sample_sigma2_gamma_scalar(List gamma, double phi2, double psi2, int q_id);
RcppExport SEXP FREE_sample_sigma2_gamma_scalar(SEXP gammaSEXP, SEXP phi2SEXP, SEXP psi2SEXP, SEXP q_idSEXP) {
  BEGIN_RCPP
  SEXP __sexp_result;
  {
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type gamma(gammaSEXP );
    Rcpp::traits::input_parameter< double >::type phi2(phi2SEXP );
    Rcpp::traits::input_parameter< double >::type psi2(psi2SEXP );
    Rcpp::traits::input_parameter< int >::type q_id(q_idSEXP );
    double __result = sample_sigma2_gamma_scalar(gamma, phi2, psi2, q_id);
    PROTECT(__sexp_result = Rcpp::wrap(__result));
  }
  UNPROTECT(1);
  return __sexp_result;
  END_RCPP
}
// calc_bs_scalar
NumericMatrix calc_bs_scalar(NumericVector x, NumericVector knots, int degree, NumericVector boundary_knots);
RcppExport SEXP FREE_calc_bs_scalar(SEXP xSEXP, SEXP knotsSEXP, SEXP degreeSEXP, SEXP boundary_knotsSEXP) {
  BEGIN_RCPP
  SEXP __sexp_result;
  {
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type knots(knotsSEXP );
    Rcpp::traits::input_parameter< int >::type degree(degreeSEXP );
    Rcpp::traits::input_parameter< NumericVector >::type boundary_knots(boundary_knotsSEXP );
    NumericMatrix __result = calc_bs_scalar(x, knots, degree, boundary_knots);
    PROTECT(__sexp_result = Rcpp::wrap(__result));
  }
  UNPROTECT(1);
  return __sexp_result;
  END_RCPP
}